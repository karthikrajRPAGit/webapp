# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    Python311:
      python.version: '3.11.10'

steps:
- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python app/src/app.py &
  displayName: 'Running Webapp'

- script: |
    pip install pytest pytest-azurepipelines
    pytest app/test/test_sample.py
  displayName: 'pytest'

- script: |
      coverage run -m pytest
      coverage xml -o coverage.xml
  displayName: Generate coverage report

- task: PublishCodeCoverageResults@2
  inputs:
    summaryFileLocation: '**/coverage.xml'

- script: |
    python setup.py sdist bdist_wheel
  displayName: 'packaging the webapp'

- task: CopyFiles@2  
  inputs:    
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1  
  inputs:    
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'                  
    ArtifactName: 'dist'    
    publishLocation: 'Container'

- task: TwineAuthenticate@1
  inputs:
    artifactFeed: 'GBMOT SRE/pythonwebapps'

- script: |
    python -m twine upload -r pythonwebapps --config-file $(PYPIRC_PATH) dist/*.whl
  displayName: 'Upload to Azure Artifact Feed'

